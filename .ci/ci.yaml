trigger:
  branches:
    include:
    - '*'
pr:
  branches:
     include:
     - '*'

# Define machines on which the build will run.
jobs:
- job: macOS
  timeoutInMinutes: 360
  displayName: macOS-10.14
  pool:
    vmImage: macOS-latest

  strategy:
    matrix:
      Plain:
        CMakeArgs-mlpack: '-DDEBUG=OFF -DPROFILE=OFF -DBUILD_PYTHON_BINDINGS=OFF -DBUILD_TESTS=OFF -DDOWNLOAD_DEPENDENCIES=ON -DBUILD_CLI_EXECUTABLES=OFF'
        CMakeArgs-models: '-DDEBUG=ON'

  steps:
  - template: macos-steps.yaml

# Linux build.
- job: Linux
  timeoutInMinutes: 360
  pool:
    vmImage: ubuntu-latest

  strategy:
    matrix:
      Plain:
          CMakeArgs-mlpack: '-DDEBUG=OFF -DPROFILE=OFF -DBUILD_PYTHON_BINDINGS=OFF -DBUILD_TESTS=OFF -DBUILD_CLI_EXECUTABLES=OFF'
          CMakeArgs-models: '-DDEBUG=ON -DMLPACK_INCLUDE_DIR=/usr/local/include/'

  steps:
  - template: linux-steps.yaml

# Windows build.
- job: WindowsVS15
  timeoutInMinutes: 360
  displayName: Windows VS15
  pool:
    vmImage: windows-2019

  strategy:
    matrix:
      Plain:
          CMakeArgs-mlpack: '-DDEBUG=OFF -DPROFILE=OFF -DBUILD_PYTHON_BINDINGS=OFF -DBUILD_TESTS=OFF -DBUILD_CLI_EXECUTABLES=OFF -DUSE_OPENMP=OFF'
          CMakeArgs-models: '-DDEBUG=ON -DUSE_OPENMP=OFF'
          CMakeGenerator: '-G "Visual Studio 16 2019"'
          MSBuildVersion: '16.0'

  steps:
  - template: windows-steps.yaml
